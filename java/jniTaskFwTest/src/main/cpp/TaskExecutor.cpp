#include <iostream>  // for std::cout#include <stdexcept>#include <string>#include <jni.h>#include "JavaObject.h"#include "TaskExecutor.h"#include "JavaClassConst.h"#include "DirectLogger.h"#include "TaskNoOp.h"#include "StringOverload.h"TaskExecutor::TaskExecutor(JNIEnv *env,		JavaObject &javaTaskExecutor) {	//std::cout << "C++ TaskExecutor.ctor()" << std::endl;}TaskExecutor::~TaskExecutor() {	//std::cout << "C++ TaskExecutor.dtor()" << std::endl;}// todo: I want to use: const JavaObject, but I get an error.// I do not fully understand const when used.void TaskExecutor::execute(JNIEnv *env,		JavaObject &javaTaskExecutor, LoggerBase &logger) {	logger.traceLog("C++ TaskExecutor: execute ENTER");	//	jobject taskRef = javaTaskExecutor.getObject(			JavaClassConst::METHODNAME_GETTASK,			JavaClassConst::SIGNATURE_GETTASK);	if (taskRef==NULL) {		return;	}	JavaObject task(env, JavaClassConst::CLASSNAME_TASK, taskRef);	//	jint taskId = task.getIntField(JavaClassConst::FIELDNAME_TASKID);	switch(taskId) {	case TaskExecutor::NO_OP_TASK:	{		TaskNoOp noOp;		noOp.execute(env, javaTaskExecutor, task, logger);		break;	}	default:	{		std::runtime_error(std::string("Invalid taskid: ")+taskId);	}	}	logger.traceLog("C++ TaskExecutor: execute LEAVE");}